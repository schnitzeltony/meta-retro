From 117819032b03f134a080d53a39d4f9a6e0ecb646 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Fri, 21 Oct 2016 21:30:32 +0200
Subject: [PATCH] ffmpegdrv.c: fix build with current ffmpeg
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 src/gfxoutputdrv/ffmpeglib.h | 2 +-
 src/gfxoutputdrv/ffmpegdrv.c | 11 ++++++-----
 2 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/src/gfxoutputdrv/ffmpeglib.h b/src/gfxoutputdrv/ffmpeglib.h
index b0136c8..3e8a93a 100644
--- a/src/gfxoutputdrv/ffmpeglib.h
+++ b/src/gfxoutputdrv/ffmpeglib.h
@@ -118,7 +118,7 @@ typedef void(*av_dict_free_t)(AVDictionary**);
 
 /* swscale functions */
 typedef struct SwsContext * (*sws_getContext_t)(int srcW, int srcH,
-                                                enum PixelFormat srcFormat, int dstW, int dstH, enum PixelFormat dstFormat,
+                                                enum AVPixelFormat srcFormat, int dstW, int dstH, enum AVPixelFormat dstFormat,
                                                 int flags, SwsFilter *srcFilter, SwsFilter *dstFilter, double *param);
 typedef void (*sws_freeContext_t)(struct SwsContext *swsContext);
 typedef int (*sws_scale_t)(struct SwsContext *context, uint8_t* srcSlice[],
diff --git a/src/gfxoutputdrv/ffmpegdrv.c b/src/gfxoutputdrv/ffmpegdrv.c
index 64359f5..437c9ac 100644
--- a/src/gfxoutputdrv/ffmpegdrv.c
+++ b/src/gfxoutputdrv/ffmpegdrv.c
@@ -30,6 +30,7 @@
 
 #include <stdio.h>
 #include <string.h>
+#include <libavutil/pixfmt.h>
 
 #include "archdep.h"
 #include "cmdline.h"
@@ -671,8 +672,8 @@ static int ffmpegdrv_open_video(AVFormatContext *oc, AVStream *st)
        picture is needed too. It is then converted to the required
        output format */
     video_st.tmp_frame = NULL;
-    if (c->pix_fmt != PIX_FMT_RGB24) {
-        video_st.tmp_frame = ffmpegdrv_alloc_picture(PIX_FMT_RGB24, c->width, c->height);
+    if (c->pix_fmt != AV_PIX_FMT_RGB24) {
+        video_st.tmp_frame = ffmpegdrv_alloc_picture(AV_PIX_FMT_RGB24, c->width, c->height);
         if (!video_st.tmp_frame) {
             log_debug("ffmpegdrv: could not allocate temporary picture");
             return -1;
@@ -769,9 +770,9 @@ static void ffmpegdrv_init_video(screenshot_t *screenshot)
 
 #ifdef HAVE_FFMPEG_SWSCALE
     /* setup scaler */
-    if (c->pix_fmt != PIX_FMT_RGB24) {
+    if (c->pix_fmt != AV_PIX_FMT_RGB24) {
         sws_ctx = VICE_P_SWS_GETCONTEXT
-                      (video_width, video_height, PIX_FMT_RGB24,
+                      (video_width, video_height, AV_PIX_FMT_RGB24,
                       video_width, video_height, c->pix_fmt,
                       SWS_BICUBIC,
                       NULL, NULL, NULL);
@@ -948,7 +949,7 @@ static int ffmpegdrv_record(screenshot_t *screenshot)
 
     c = video_st.st->codec;
 
-    if (c->pix_fmt != PIX_FMT_RGB24) {
+    if (c->pix_fmt != AV_PIX_FMT_RGB24) {
         ffmpegdrv_fill_rgb_image(screenshot, video_st.tmp_frame);
 
         if (sws_ctx != NULL) {
-- 
2.5.5

